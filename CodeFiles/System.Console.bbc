#bf "stdout" "void" "char";
#bf "stderr" "void" "char";
#bf "stdin" "char";

#bf "console-set" "void" "char" "int" "int";
#bf "console-clear" "void";

using System.String;
using System.Memory;

[External("console-set")]
export void Set(char data, int x, int y);

[External("console-clear")]
export void Clear();



[External("stderr")]
export void PrintError(char data);

//
//  == PRINT ==
//

[External("stdout")]
[StandardOutput]
export void Print(char data);

[StandardOutput]
export void Print(byte message)
{
    Print(temp message.ToString());
}

[StandardOutput]
export void Print(int message)
{
    Print(temp message.ToString());
}

[StandardOutput]
export void Print(bool message)
{
    if (message)
    {
        Print("true");
    }
    else
    {
        Print("false");
    };
}

[StandardOutput]
export void Print(temp String message)
{
    if (&message < 0)
    {
        Print("null");
    }
    else
    {
        int length = message.length;
        for (int i; i < length; i++)
        {
            Print(*(&message + sizeof(String) + i) as char);
        };
    };
}

//
//  == PRINT LINE ==
//

export void PrintLine()
{
    Print('\r');
    Print('\n');
}

export macro PrintLine(message)
{
    Print(message);
    PrintLine();
}

export void PrintLine(char message)
{
    Print(message);
    PrintLine();
}

export void PrintLine(int message)
{
    Print(message);
    PrintLine();
}

export void PrintLine(byte message)
{
    Print(message);
    PrintLine();
}

export void PrintLine(bool message)
{
    Print(message);
    PrintLine();
}

//
//  == INPUT ==
//

[External("stdin")]
[StandardInput]
char StdIn();

export char ReadKey()
{
    char in = StdIn();
    Print(in);
    return in;
}

export String ReadLine() {
    String result = new String(0);
    while (true)
    {
        char inpChar = ReadKey();
        if (inpChar == '\n') { break; };
        if (inpChar == '\r') { break; };

        String newResult = new String(result.length + 1);

        for (int i = 0; i < result.length; i++)
        {
            newResult[i] = result[i];
        };

        newResult[result.length] = inpChar;
      
        delete result;

        result = newResult;
    };
    return result;
}
